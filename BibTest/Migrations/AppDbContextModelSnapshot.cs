// <auto-generated />
using System;
using BibTest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibTest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BibTest.DAL.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Александр",
                            Patronymic = "Сергеевич",
                            Surname = "Пушкин"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Фёдор",
                            Patronymic = "Михайлович",
                            Surname = "Достоевский"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Николай",
                            Patronymic = "Васильевич",
                            Surname = "Гоголь"
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathBookCover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Роман в стихах охватывает события с 1819 по 1825 год: от Заграничных походов Русской армии после разгрома Наполеона до восстания декабристов. Сюжет романа прост, в центре повествования — история любви Евгения Онегина и Татьяны Лариной.\r\n\r\n«Евгений Онегин» стал поистине энциклопедией русской жизни времен царствования Александра I, так как широта охваченных в нем тем, детализация быта, многосюжетность композиции, глубина описания характеров персонажей и сейчас достоверно демонстрируют читателям особенности жизни аристократии той эпохи. Одна из главных особенностей романа, отмеченная самим автором, — «разомкнутость» повествования во времени: каждая глава могла бы стать последней, но может иметь и продолжение, то есть каждая глава фактически является самостоятельным и цельным произведением.",
                            PathBookCover = "1.jpg",
                            Title = "Евгений Онегин"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Description = "«Метель» — последнее произведение из цикла «Повести покойного Ивана Петровича Белкина» Александра Пушкина. Развивая мотив судьбы и предопределения в жизни человека, автор в повести «Метель» создает образы заурядных людей и показывает, как причудливо может сложиться жизнь, если вмешается необъяснимый рок. Герои повести — сентиментальная барышня Маша и бедный прапорщик Владимир — влюблены друг в друга. Родители девушки препятствуют браку, и молодые люди решают бежать и тайно венчаться. Все спланировано и рассчитано: верные слуги готовы помочь, друзья жениха соглашаются стать свидетелями, батюшка готов венчать. Но судьба рассудила по-своему. Поднялась метель, закружила в поле жениха, и он опоздал на собственную свадьбу. И эта же метель привела к деревенской церкви проезжего офицера Бурмина, который скуки ради и оказался под венцом с незнакомой барышней.\r\n\r\nРаботу над повестью автор закончил 20 октября 1830 года в Болдино, в 1831 году она была издана.",
                            PathBookCover = "2.jpg",
                            Title = "Метель"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Description = "Героиня повести Лиза — единственное и балованное дитя помещика Муромского; в доме ей все позволено, отец не чает в ней души, и поминутные проказы дочери лишь восхищают его. Деревенская жизнь, чтение европейских романов, дружба с дворовыми крестьянами развивают в ней живость и естественность характера, простоту и искренность поведения, веселость и озорство, мечтательность, жажду любви и счастья. Поэтому роли, в которых она себя пробует — уездная барышня, жеманница-англоманка и крестьянка Акулина, — даются ей легко и свободно.",
                            PathBookCover = "3.jpg",
                            Title = "Барышня-крестьянка"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Description = "Главная идея романа — изобразить положительно прекрасного человека, обладающего нравственной чистотой, благородством, деликатностью, способностью сострадать чужой боли до полного самоотречения. «Прекрасное есть идеал, а идеал — ни наш, ни цивилизованной Европы — еще далеко не выработался», — писал о своей задаче Достоевский. Разрушение социального уклада в России конца 60-х годов XIX века писатель доносит через психологические портреты действующих лиц, через крах семейных и межчеловеческих взаимоотношений, связанных с проблемами власти денег над людьми, безбожия и разгула эгоистических страстей.\r\n\r\nРоман был начат в 1867 году в Женеве, закончен в 1869 году во Флоренции. Публиковался частями в 1868–1869 годах в журнале «Русский вестник».",
                            PathBookCover = "4.jpg",
                            Title = "Идиот"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Description = "Главная идея романа — изобразить положительно прекрасного человека, обладающего нравственной чистотой, благородством, деликатностью, способностью сострадать чужой боли до полного самоотречения. «Прекрасное есть идеал, а идеал — ни наш, ни цивилизованной Европы — еще далеко не выработался», — писал о своей задаче Достоевский. Разрушение социального уклада в России конца 60-х годов XIX века писатель доносит через психологические портреты действующих лиц, через крах семейных и межчеловеческих взаимоотношений, связанных с проблемами власти денег над людьми, безбожия и разгула эгоистических страстей.\r\n\r\nРоман был начат в 1867 году в Женеве, закончен в 1869 году во Флоренции. Публиковался частями в 1868–1869 годах в журнале «Русский вестник».",
                            PathBookCover = "5.jpg",
                            Title = "Преступление и наказание"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            Description = "Святочный рассказ «Мальчик у Христа на елке» Федора Достоевского впервые вышел в январе 1875 года на страницах январского выпуска «Дневника писателя». История рассказывает о бедном голодном мальчике, который остался один под Рождество. Он мечтает о празднике, который может видеть лишь в окне господского дома, и в конце концов попадает на Христову елку.",
                            PathBookCover = "6.jpg",
                            Title = "Мальчик у Христа на ёлке"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            Description = "«Ревизор» — комедия в пяти действиях. Традиционно считается, что сюжет был подсказан Николаю Гоголю А.С. Пушкиным. Премьера «Ревизора» состоялась 19 апреля 1836 года на сцене Александринского театра в Петербурге. Присутствовал сам император, Николай I. Гоголь был удручен увиденным: замысел комедии, в которой вопреки драматургическим канонам того времени фактически не было положительного героя, не был понят ни актерами, ни зрителями. Из глубокого смысла, вложенного в пьесу, не было ничего извлечено. Комедию приняли за обыкновенный водевиль…",
                            PathBookCover = "7.jpg",
                            Title = "Ревизор"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Description = "«Мертвые души» — произведение русского прозаика, драматурга, поэта, критика, публициста Николая Васильевича Гоголя (1809-1852), которое сам автор обозначил как «поэма». Изначально задумано как трёхтомное произведение. Первый том под названием «Похождения Чичикова, или Мёртвые души» был издан в 1842 году. Практически готовый второй том уничтожен писателем в 1845 году, но сохранилось несколько глав в черновиках, которые были изданы в составе Полного собрания сочинений Гоголя в 1855 году. Третий том был задуман и не начат, о нём остались только обрывочные сведения.\r\n\r\nК этому своему произведению Гоголь относился как к «священному завещанию поэта» и литературному подвигу, имеющему одновременно значение патриотического, «долженствующего открыть судьбы России и мира». Писатель живописует Россию как страну, глубоко пораженную пороками и коррупцией, но именно эта нищета и греховность составляют метафизическую подоплеку ее возрождения.",
                            PathBookCover = "8.jpg",
                            Title = "Мёртвые души"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            Description = "В нарочито косноязычной сказовой манере, перебиваемой патетическими монологами, автор повествует о нелепой жизни и смерти «маленького человека», по своему сопротивляющегося обстоятельствам и бунтующего против социальной иерархии. Неожиданное соединение элементов критического реализма и мистического гротеска в этой повести неоднократно ставило в тупик литературоведов и критиков.\r\n\r\nПовесть увидела свет в 3-м томе Собрания сочинений Гоголя, отпечатанного на исходе 1842 года и поступившего в продажу в январе 1843 года. Вошла в историю русской литературы как «манифест социального равенства и неотъемлемых прав личности в любом ее состоянии и звании».",
                            PathBookCover = "9.jpg",
                            Title = "Шинель"
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.DistributionOfBooks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateExtradition")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReturn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<int>("PersonalDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("PersonalDataId");

                    b.ToTable("DistributionOfBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            DateExtradition = new DateTime(2022, 7, 18, 18, 58, 15, 571, DateTimeKind.Local).AddTicks(1609),
                            DateReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            PersonalDataId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            DateExtradition = new DateTime(2022, 7, 18, 18, 58, 15, 571, DateTimeKind.Local).AddTicks(1623),
                            DateReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            PersonalDataId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            DateExtradition = new DateTime(2022, 7, 18, 18, 58, 15, 571, DateTimeKind.Local).AddTicks(1625),
                            DateReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            PersonalDataId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            DateExtradition = new DateTime(2015, 7, 20, 18, 30, 25, 0, DateTimeKind.Unspecified),
                            DateReturn = new DateTime(2016, 7, 20, 18, 30, 25, 0, DateTimeKind.Unspecified),
                            IsReturned = true,
                            PersonalDataId = 2
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Александр",
                            Surname = "Пушкин"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Фёдор",
                            Surname = "Достоевский"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Николай",
                            Surname = "Гоголь"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Галя",
                            Surname = "Петровна"
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Библиотекарь"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Читатель"
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDataId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalDataId")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Pushkin",
                            Password = "Pushkin",
                            PersonalDataId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Login = "Dostoevski",
                            Password = "Dostoevski",
                            PersonalDataId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Login = "Gogol",
                            Password = "Gogol",
                            PersonalDataId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Login = "Gala",
                            Password = "Gala",
                            PersonalDataId = 4,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("BibTest.DAL.Models.Book", b =>
                {
                    b.HasOne("BibTest.DAL.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BibTest.DAL.Models.DistributionOfBooks", b =>
                {
                    b.HasOne("BibTest.DAL.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibTest.DAL.Models.PersonalData", "PersonalData")
                        .WithMany("DistributionOfBooks")
                        .HasForeignKey("PersonalDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("PersonalData");
                });

            modelBuilder.Entity("BibTest.DAL.Models.User", b =>
                {
                    b.HasOne("BibTest.DAL.Models.PersonalData", "PersonalData")
                        .WithOne("User")
                        .HasForeignKey("BibTest.DAL.Models.User", "PersonalDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibTest.DAL.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalData");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BibTest.DAL.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BibTest.DAL.Models.PersonalData", b =>
                {
                    b.Navigation("DistributionOfBooks");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("BibTest.DAL.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
